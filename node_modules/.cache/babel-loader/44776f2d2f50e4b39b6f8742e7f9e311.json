{"ast":null,"code":"var _jsxFileName = \"/Users/sarahchun/Desktop/covid-app/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const dailyData = await fetchDailyData();\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n      datasets: [{\n        label: \"People\",\n        backgroundColor: [\"rgba(0, 0, 255, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\"],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }) : null;\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/sarahchun/Desktop/covid-app/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","dailyData","setDailyData","fetchAPI","barChart","confirmed","labels","datasets","label","backgroundColor","data","value","recovered","deaths","legend","display","title","text","country","lineChart","map","date","borderColor","fill","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAG,YAAY;AAC3B,YAAMF,SAAS,GAAG,MAAML,cAAc,EAAtC;AACAM,MAAAA,YAAY,CAAC,MAAMN,cAAc,EAArB,CAAZ;AACD,KAHD;;AAIAO,IAAAA,QAAQ;AACT,GANQ,EAMN,EANM,CAAT;AAQA,QAAMC,QAAQ,GAAGC,SAAS,gBACxB,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,QADT;AAEEC,QAAAA,eAAe,EAAE,CACf,sBADe,EAEf,sBAFe,EAGf,sBAHe,CAFnB;AAOEC,QAAAA,IAAI,EAAE,CAACL,SAAS,CAACM,KAAX,EAAkBC,SAAS,CAACD,KAA5B,EAAmCE,MAAM,CAACF,KAA1C;AAPR,OADQ;AAFN,KADR;AAeE,IAAA,OAAO,EAAE;AACPG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBC,OAAQ;AAAnD;AAFA,KAfX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADwB,GAqBtB,IArBJ;AAuBA,QAAMC,SAAS,GAAGlB,SAAS,CAAC,CAAD,CAAT,gBAChB,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJK,MAAAA,MAAM,EAAEL,SAAS,CAACmB,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJd,MAAAA,QAAQ,EAAE,CACR;AACEG,QAAAA,IAAI,EAAET,SAAS,CAACmB,GAAV,CAAeV,IAAD,IAAUA,IAAI,CAACL,SAA7B,CADR;AAEEG,QAAAA,KAAK,EAAE,UAFT;AAGEc,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADQ,EAOR;AACEb,QAAAA,IAAI,EAAET,SAAS,CAACmB,GAAV,CAAeV,IAAD,IAAUA,IAAI,CAACG,MAA7B,CADR;AAEEL,QAAAA,KAAK,EAAE,QAFT;AAGEc,QAAAA,WAAW,EAAE,KAHf;AAIEb,QAAAA,eAAe,EAAE,sBAJnB;AAKEc,QAAAA,IAAI,EAAE;AALR,OAPQ;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAqBd,IArBJ;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAExB,MAAM,CAACyB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCN,OAAO,GAAGd,QAAH,GAAce,SAAxD,CADF;AAGD,CA5DD;;AA8DA,eAAenB,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const dailyData = await fetchDailyData();\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  const lineChart = dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map((data) => data.confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => data.deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}